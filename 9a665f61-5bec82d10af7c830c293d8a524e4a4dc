/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as WorkshopRouteImport } from './routes/workshop'
import { Route as SignupRouteImport } from './routes/signup'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as ChatRouteImport } from './routes/chat'
import { Route as IndexRouteImport } from './routes/index'
import { Route as TakaIndexRouteImport } from './routes/taka/index'
import { Route as ServicesIndexRouteImport } from './routes/services/index'
import { Route as SavedIndexRouteImport } from './routes/saved/index'
import { Route as ProductsIndexRouteImport } from './routes/products/index'
import { Route as TakaIdRouteImport } from './routes/taka/$id'
import { Route as MarketLayoutRouteImport } from './routes/market/_layout'

const MarketRouteImport = createFileRoute('/market')()

const MarketRoute = MarketRouteImport.update({
  id: '/market',
  path: '/market',
  getParentRoute: () => rootRouteImport,
} as any)
const WorkshopRoute = WorkshopRouteImport.update({
  id: '/workshop',
  path: '/workshop',
  getParentRoute: () => rootRouteImport,
} as any)
const SignupRoute = SignupRouteImport.update({
  id: '/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const ChatRoute = ChatRouteImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const TakaIndexRoute = TakaIndexRouteImport.update({
  id: '/taka/',
  path: '/taka/',
  getParentRoute: () => rootRouteImport,
} as any)
const ServicesIndexRoute = ServicesIndexRouteImport.update({
  id: '/services/',
  path: '/services/',
  getParentRoute: () => rootRouteImport,
} as any)
const SavedIndexRoute = SavedIndexRouteImport.update({
  id: '/saved/',
  path: '/saved/',
  getParentRoute: () => rootRouteImport,
} as any)
const ProductsIndexRoute = ProductsIndexRouteImport.update({
  id: '/products/',
  path: '/products/',
  getParentRoute: () => rootRouteImport,
} as any)
const TakaIdRoute = TakaIdRouteImport.update({
  id: '/taka/$id',
  path: '/taka/$id',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketLayoutRoute = MarketLayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => MarketRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/workshop': typeof WorkshopRoute
  '/market': typeof MarketLayoutRoute
  '/taka/$id': typeof TakaIdRoute
  '/products': typeof ProductsIndexRoute
  '/saved': typeof SavedIndexRoute
  '/services': typeof ServicesIndexRoute
  '/taka': typeof TakaIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/workshop': typeof WorkshopRoute
  '/market': typeof MarketLayoutRoute
  '/taka/$id': typeof TakaIdRoute
  '/products': typeof ProductsIndexRoute
  '/saved': typeof SavedIndexRoute
  '/services': typeof ServicesIndexRoute
  '/taka': typeof TakaIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/chat': typeof ChatRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/signup': typeof SignupRoute
  '/workshop': typeof WorkshopRoute
  '/market': typeof MarketRouteWithChildren
  '/market/_layout': typeof MarketLayoutRoute
  '/taka/$id': typeof TakaIdRoute
  '/products/': typeof ProductsIndexRoute
  '/saved/': typeof SavedIndexRoute
  '/services/': typeof ServicesIndexRoute
  '/taka/': typeof TakaIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/chat'
    | '/login'
    | '/profile'
    | '/signup'
    | '/workshop'
    | '/market'
    | '/taka/$id'
    | '/products'
    | '/saved'
    | '/services'
    | '/taka'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/chat'
    | '/login'
    | '/profile'
    | '/signup'
    | '/workshop'
    | '/market'
    | '/taka/$id'
    | '/products'
    | '/saved'
    | '/services'
    | '/taka'
  id:
    | '__root__'
    | '/'
    | '/chat'
    | '/login'
    | '/profile'
    | '/signup'
    | '/workshop'
    | '/market'
    | '/market/_layout'
    | '/taka/$id'
    | '/products/'
    | '/saved/'
    | '/services/'
    | '/taka/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ChatRoute: typeof ChatRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  SignupRoute: typeof SignupRoute
  WorkshopRoute: typeof WorkshopRoute
  MarketRoute: typeof MarketRouteWithChildren
  TakaIdRoute: typeof TakaIdRoute
  ProductsIndexRoute: typeof ProductsIndexRoute
  SavedIndexRoute: typeof SavedIndexRoute
  ServicesIndexRoute: typeof ServicesIndexRoute
  TakaIndexRoute: typeof TakaIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/market': {
      id: '/market'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/workshop': {
      id: '/workshop'
      path: '/workshop'
      fullPath: '/workshop'
      preLoaderRoute: typeof WorkshopRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/signup': {
      id: '/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof SignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/chat': {
      id: '/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof ChatRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/taka/': {
      id: '/taka/'
      path: '/taka'
      fullPath: '/taka'
      preLoaderRoute: typeof TakaIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/services/': {
      id: '/services/'
      path: '/services'
      fullPath: '/services'
      preLoaderRoute: typeof ServicesIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/saved/': {
      id: '/saved/'
      path: '/saved'
      fullPath: '/saved'
      preLoaderRoute: typeof SavedIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/products/': {
      id: '/products/'
      path: '/products'
      fullPath: '/products'
      preLoaderRoute: typeof ProductsIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/taka/$id': {
      id: '/taka/$id'
      path: '/taka/$id'
      fullPath: '/taka/$id'
      preLoaderRoute: typeof TakaIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/market/_layout': {
      id: '/market/_layout'
      path: '/market'
      fullPath: '/market'
      preLoaderRoute: typeof MarketLayoutRouteImport
      parentRoute: typeof MarketRoute
    }
  }
}

interface MarketRouteChildren {
  MarketLayoutRoute: typeof MarketLayoutRoute
}

const MarketRouteChildren: MarketRouteChildren = {
  MarketLayoutRoute: MarketLayoutRoute,
}

const MarketRouteWithChildren =
  MarketRoute._addFileChildren(MarketRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ChatRoute: ChatRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  SignupRoute: SignupRoute,
  WorkshopRoute: WorkshopRoute,
  MarketRoute: MarketRouteWithChildren,
  TakaIdRoute: TakaIdRoute,
  ProductsIndexRoute: ProductsIndexRoute,
  SavedIndexRoute: SavedIndexRoute,
  ServicesIndexRoute: ServicesIndexRoute,
  TakaIndexRoute: TakaIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
